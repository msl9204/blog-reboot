{"version":3,"sources":["cloud/firebase_init.js","hooks/useDb.js","hooks/useIntersect.js","components/ListPage/Contents.js","components/ListPage/Main.js","components/Header.js","styles/GlobalStyle.js","hooks/useStorage.js","components/EditPage/Edit.js","components/DetailPage/Detail.js","components/Modal/ModalPortal.js","components/Modal/Modal.js","hooks/useAuth.js","components/AdminPage/Admin.js","components/AdminPage/AdminLogin.js","App.js","index.js","config/firebase_config.js"],"names":["app","firebase","initializeApp","firebaseConfig","firestore_db","firestore","firebase_storage","storage","firebase_auth","auth","useDb","getContentList","collection","orderBy","get","then","snapshot","empty","docs","console","log","catch","err","getContent","id","doc","exists","data","writeContent","title","postRef","date","Date","now","add","timestamp","ref","deleteContent","forEach","item","delete","editContent","update","updated","baseOption","root","threshold","rootMargin","hoverBar","keyframes","hoverContentsSlide","ContentsContainer","styled","Link","ContentsContent","div","TitleElements","h1","TimeElements","RenderElements","time","dom","useRef","checkIntersect","useCallback","entry","current","isIntersecting","style","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","opacity","transform","useEffect","observer","IntersectionObserver","observe","disconnect","useIntersect","to","moment","calendar","Contents","db","useState","Data","setData","a","fetchData","Fragment","map","key","IntroduceContainer","IntroductContents","MainPage","role","aria-label","FromTop","RightToLeft","HeaderContainer","HeaderContents","AboutPostContainer","AboutPostContents","Header","GlobalStyle","createGlobalStyle","useStorage","reader","FileReader","Markdown","setMarkdown","onload","result","readAsText","BlobToMarkdown","getMdFile","fileName","child","getDownloadURL","url","xhr","XMLHttpRequest","responseType","event","blob","response","open","send","uploadMdfile","file","put","deleteMdfile","EditContainer","WriteContainer","InputField","input","TypeField","textarea","PreviewContainer","ShowTitle","ShowField","ButtonContainer","UploadButton","CancelButton","EditPage","Content","setContent","Title","setTitle","useParams","history","useHistory","saveTofile","Blob","type","forEditFetchData","dataProcessing","sendData","getWrittenId","push","placeholder","value","onChange","e","target","onClick","source","DetailContainer","DetailTitleContainer","DetailTitleContents","ReactMarkdown","DetailContentsContainer","DetailContentsTime","GoListButton","BreakLine","props","border","borderRadius","paddingLeft","margin","children","BlockQuoteBlock","TableCellBlock","textAlign","align","padding","isHeader","borderLeft","borderRight","borderButtom","DetailPage","Item","setItem","renderers","blockquote","thematicBreak","tableCell","ModalPortal","el","document","getElementById","ReactDOM","createPortal","ModalContainer","ModalContent","RenderModal","content","className","Modal","isVisible","message","authContext","createContext","ProvideAuth","user","setUser","unsubscribe","onAuthStateChanged","signin","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","Provider","useAuth","useContext","SpinnerAnimation","SpinLoader","AdminPageContainer","WriteButton","EditButton","DeleteButton","ListContainer","ListContent","tabColor","CheckBox","isCheck","MoveToDetail","SelectList","LoadingSpinner","width","height","LoadAndNotLoginRender","Timer","setTimer","LoginWaitUnSubscribe","setTimeout","RedirectWaitUnSubscribe","clearTimeout","RenderLists","setIsCheck","prev","find_index","indexOf","splice","onClickEvent","AdminPage","setIsVisible","setMessage","DataList","setDataList","checkModalRender","list","length","classList","contains","preventDefault","LoginPageContainer","LoginContainer","InputContainer","LoginInput","LoginButton","AdminLogin","Email","setEmail","Password","setPassword","icon","faEnvelope","size","faKey","error","alert","PageContainer","App","exact","path","render","StrictMode","module","exports","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"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","file":"static/js/main.548d921a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\nimport { firebaseConfig } from \"../config/firebase_config\";\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nexport const firestore_db = app.firestore();\nexport const firebase_storage = app.storage();\nexport const firebase_auth = app.auth();\n","import { firestore_db } from \"../cloud/firebase_init\";\n\nexport default function useDb() {\n    const getContentList = () => {\n        const postsRef = firestore_db.collection(\"posts\");\n\n        return postsRef\n            .orderBy(\"timestamp\", \"desc\")\n            .get()\n            .then((snapshot) => {\n                if (snapshot.empty) {\n                    console.log(\"No matching documents.\");\n                    return;\n                }\n\n                return snapshot.docs;\n            })\n            .catch((err) => {\n                console.log(\"Error getting documents\", err);\n                return;\n            });\n    };\n\n    const getContent = (id) => {\n        const postRef = firestore_db.collection(\"posts\").doc(id);\n\n        return postRef\n            .get()\n            .then((doc) => {\n                if (!doc.exists) {\n                    console.log(\"No such document!\");\n                } else {\n                    return doc.data();\n                }\n            })\n            .catch((err) => {\n                console.log(\"Error getting document\", err);\n            });\n    };\n\n    const writeContent = ({ title }) => {\n        const postRef = firestore_db.collection(\"posts\");\n        const date = Date.now();\n\n        return postRef\n            .add({\n                title,\n                timestamp: date,\n            })\n            .then(function (ref) {\n                return ref.id;\n            });\n    };\n\n    const editContent = (id, { title }) => {\n        const postRef = firestore_db.collection(\"posts\").doc(id);\n        const date = Date.now();\n        postRef.update({\n            title,\n            updated: date,\n        });\n    };\n\n    const deleteContent = (id) => {\n        id.forEach((item) => {\n            const postRef = firestore_db.collection(\"posts\").doc(item);\n            postRef.delete();\n        });\n    };\n\n    return {\n        getContentList,\n        getContent,\n        writeContent,\n        deleteContent,\n        editContent,\n    };\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\nconst baseOption = {\n    root: null,\n    threshold: 0.5,\n    rootMargin: \"0px\",\n};\n\nexport default function useInterSect() {\n    const dom = useRef();\n\n    const checkIntersect = useCallback(([entry]) => {\n        const { current } = dom;\n\n        if (entry.isIntersecting) {\n            current.style.transitionProperty = \"opacity transform\";\n            current.style.transitionDuration = \"0.5s\";\n            current.style.transitionTimingFunction =\n                \"cubic-bezier(0, 0, 0.2, 1)\";\n            current.style.transitionDelay = \"0s\";\n            current.style.opacity = 1;\n            current.style.transform = \"translate3d(0, 0, 0)\";\n        }\n    }, []);\n    useEffect(() => {\n        let observer;\n        const { current } = dom;\n        if (current) {\n            observer = new IntersectionObserver(checkIntersect, {\n                ...baseOption,\n            });\n            observer.observe(current);\n        }\n\n        return () => observer && observer.disconnect();\n    }, [dom]);\n\n    return {\n        ref: dom,\n    };\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport useDb from \"../../hooks/useDb\";\nimport useIntersect from \"../../hooks/useIntersect\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst hoverBar = keyframes`\n    0%{opacity: 0}\n    100%{opacity: 1}\n\n`;\n\nconst hoverContentsSlide = keyframes`\n    0%{transform: translatex(0px)}\n    100%{transform: translatex(5px)}\n\n`;\n\nconst ContentsContainer = styled(Link)`\n    display: flex;\n    width: 50%;\n    height: auto;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n\n    padding-bottom: 30px;\n    margin-top: 30px;\n\n    text-decoration: none;\n    color: black;\n\n    opacity: 0;\n    transform: translateX(0) translateY(50%) translateZ(0);\n\n    &:hover {\n        color: gray;\n        animation: ${hoverContentsSlide} 1s forwards;\n        &:before {\n            content: \"\";\n\n            animation: ${hoverBar} 1s;\n            border-left: 5px solid #0984e3;\n            border-radius: 30px;\n        }\n    }\n`;\n\nconst ContentsContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    width: 100%;\n\n    padding: 0px 20px 20px 20px;\n`;\n\nconst TitleElements = styled.h1``;\n\nconst TimeElements = styled.div`\n    color: gray;\n`;\n\nfunction RenderElements({ id, title, timestamp }) {\n    const UnixTimeToDate = (time) => {\n        return moment(time).calendar();\n    };\n\n    const dom = useIntersect();\n\n    return (\n        <ContentsContainer {...dom} to={`/detail/${id}`}>\n            <ContentsContent>\n                <TitleElements>{title}</TitleElements>\n                <TimeElements>{UnixTimeToDate(timestamp)}</TimeElements>\n            </ContentsContent>\n        </ContentsContainer>\n    );\n}\n// TODO : 날짜순으로 정렬되게 하기\n\nexport default function Contents() {\n    const db = useDb();\n    const [Data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setData(await db.getContentList());\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <React.Fragment>\n            {Data &&\n                Data.map((doc) => {\n                    return (\n                        <RenderElements\n                            key={doc.id}\n                            id={doc.id}\n                            title={doc.data().title}\n                            timestamp={doc.data().timestamp}\n                        />\n                    );\n                })}\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Contents from \"./Contents\";\n\nconst IntroduceContainer = styled.div`\n    display: flex;\n    width: 50%;\n    /* border: 1px solid black; */\n    height: 200px;\n\n    align-items: center;\n    justify-content: center;\n`;\nconst IntroductContents = styled.div`\n    font-size: 2rem;\n`;\n\nexport default function MainPage() {\n    return (\n        <React.Fragment>\n            <IntroduceContainer>\n                <IntroductContents>\n                    <span role=\"img\" aria-label=\"book\">\n                        📚\n                    </span>{\" \"}\n                    메인 메세지 입니다.\n                </IntroductContents>\n            </IntroduceContainer>\n            <Contents />\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst FromTop = keyframes`\n    0%{\n        transform: translatey(-100px);\n        opacity: 0;\n    }\n    100%{\n        transform: translatey(0px);\n        opacity: 1;\n    }\n`;\n\nconst RightToLeft = keyframes`\n    0% {\n        transform: translatex(100px);\n        opacity: 0;\n}\n    100% {\n        transform: translatex(0px);\n        opacity: 1;\n}\n`;\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    width: 50%;\n    margin: 30px 0;\n    justify-content: space-between;\n`;\n\nconst HeaderContents = styled(Link)`\n    font-size: 1.5rem;\n    animation: ${FromTop} 0.5s;\n    text-decoration: none;\n    color: black;\n`;\n\nconst AboutPostContainer = styled.div`\n    display: flex;\n`;\n\nconst AboutPostContents = styled(HeaderContents)`\n    font-size: 1rem;\n    margin: 0 30px;\n    animation: ${RightToLeft} 2s;\n`;\n\nexport default function Header() {\n    return (\n        <HeaderContainer>\n            <HeaderContents to=\"/\">MinSooBlog</HeaderContents>\n            <AboutPostContainer>\n                <AboutPostContents>About</AboutPostContents>\n                <AboutPostContents>Post</AboutPostContents>\n            </AboutPostContainer>\n        </HeaderContainer>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    html,textarea {\n        font-family: 'Noto Sans KR', sans-serif;\n\n    }\n`;\n\nexport default GlobalStyle;\n","import { useState, useEffect } from \"react\";\n\nimport { firebase_storage } from \"../cloud/firebase_init\";\n\nexport default function useStorage() {\n    const reader = new FileReader();\n    const storage = firebase_storage.ref();\n    const [Data, setData] = useState(null);\n    const [Markdown, setMarkdown] = useState(null);\n\n    async function BlobToMarkdown() {\n        if (Data) {\n            reader.onload = function () {\n                setMarkdown(reader.result);\n            };\n\n            reader.readAsText(Data);\n        }\n    }\n\n    useEffect(() => {\n        BlobToMarkdown();\n    });\n\n    const getMdFile = (fileName) => {\n        const htmlRef = storage.child(\"html\");\n        const fileRef = htmlRef.child(fileName);\n\n        fileRef.getDownloadURL().then(function (url) {\n            const xhr = new XMLHttpRequest();\n\n            xhr.responseType = \"blob\";\n            xhr.onload = function (event) {\n                const blob = xhr.response;\n                setData(blob);\n            };\n            xhr.open(\"GET\", url);\n            xhr.send();\n        });\n    };\n\n    const uploadMdfile = (fileName, file) => {\n        const htmlRef = storage.child(`html/${fileName}.txt`);\n        htmlRef.put(file).then(function (snapshot) {\n            console.log(\"Uploaded a blob or file!\");\n        });\n    };\n\n    const deleteMdfile = (fileName) => {\n        fileName.forEach((item) => {\n            const htmlRef = storage.child(`html/${item}.txt`);\n\n            htmlRef.delete();\n        });\n    };\n\n    return { Markdown, getMdFile, uploadMdfile, deleteMdfile };\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown/with-html\";\n\nimport styled from \"styled-components\";\n\nimport useDb from \"../../hooks/useDb\";\nimport useStorage from \"../../hooks/useStorage\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst EditContainer = styled.div`\n    display: flex;\n\n    width: 100%;\n\n    align-self: flex-start;\n`;\n\nconst WriteContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    margin: 0 50px;\n`;\n\nconst InputField = styled.input`\n    width: 100%;\n    height: 50px;\n    margin-top: 200px;\n    font-size: 1.5rem;\n`;\n\nconst TypeField = styled.textarea`\n    width: 100%;\n\n    margin-top: 30px;\n\n    height: 700px;\n    font-size: 1rem;\n    align-self: flex-start;\n`;\n\nconst PreviewContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    padding: 30px;\n`;\n\nconst ShowTitle = styled.h1``;\n\nconst ShowField = styled.div``;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    align-self: flex-start;\n`;\n\nconst UploadButton = styled.div`\n    margin: 30px 10px;\n    width: 100px;\n    height: 50px;\n    border-radius: 30px;\n    background: #3498db;\n    line-height: 45px;\n    text-align: center;\n    vertical-align: middle;\n    cursor: pointer;\n`;\n\nconst CancelButton = styled(UploadButton)`\n    background: #ff7675;\n`;\n\nexport default function EditPage() {\n    const [Content, setContent] = useState(\"\");\n    const [Title, setTitle] = useState(\"\");\n    const { id } = useParams();\n    const history = useHistory();\n    const db = useDb();\n    const storage = useStorage();\n\n    const saveTofile = async () => {\n        const file = new Blob([Content], { type: \"text/plain\" });\n\n        return file;\n    };\n\n    const forEditFetchData = async (id) => {\n        if (id) {\n            // 수정하는 경우,\n            const Data = await db.getContent(id);\n            storage.getMdFile(`${id}.txt`);\n\n            setTitle(Data.title);\n        } else {\n            // 새로작성하는 경우\n            return;\n        }\n    };\n    // 이런부분 redux로 구현하면 편할듯\n    useEffect(() => {\n        setContent(storage.Markdown);\n    }, [storage.Markdown]);\n\n    useEffect(() => {\n        forEditFetchData(id);\n    }, [id]);\n\n    const dataProcessing = async () => {\n        const file = await saveTofile();\n        const sendData = { title: Title };\n\n        if (id) {\n            // 수정하는 경우,\n            await db.editContent(id, sendData);\n            storage.uploadMdfile(id, file);\n        } else {\n            // 새로작성하는 경우,\n            const getWrittenId = await db.writeContent(sendData);\n            storage.uploadMdfile(getWrittenId, file);\n        }\n\n        history.push(\"/admin\");\n    };\n\n    return (\n        <React.Fragment>\n            <EditContainer>\n                <WriteContainer>\n                    <InputField\n                        placeholder=\"title\"\n                        value={Title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <TypeField\n                        placeholder=\"Content\"\n                        value={Content}\n                        onChange={(e) => setContent(e.target.value)}\n                    />\n                    <ButtonContainer>\n                        <UploadButton onClick={() => dataProcessing()}>\n                            쓰기\n                        </UploadButton>\n                        <CancelButton onClick={() => history.push(\"/admin\")}>\n                            취소\n                        </CancelButton>\n                    </ButtonContainer>\n                </WriteContainer>\n                <PreviewContainer>\n                    <ShowTitle>{Title}</ShowTitle>\n                    <ShowField>\n                        <ReactMarkdown source={Content} />\n                    </ShowField>\n                </PreviewContainer>\n            </EditContainer>\n        </React.Fragment>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown/with-html\";\n\nimport styled from \"styled-components\";\nimport useDb from \"../../hooks/useDb\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useStorage from \"../../hooks/useStorage\";\nimport moment from \"moment\";\n\nconst DetailContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    width: 50%;\n`;\n\nconst DetailTitleContainer = styled.div`\n    display: flex;\n    height: 200px;\n    font-size: 3rem;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\nconst DetailTitleContents = styled(ReactMarkdown)``;\n\nconst DetailContentsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 50px;\n    width: 100%;\n    height: auto;\n`;\n\nconst DetailContentsTime = styled.div`\n    margin-bottom: 50px;\n    color: #bdc3c7;\n`;\n\n// const DetailContentsContents = styled.div``;\n\nconst GoListButton = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    right: 10vw;\n    bottom: 5vw;\n    background: #dfe6e9;\n    cursor: pointer;\n    width: 100px;\n    height: 60px;\n    border-radius: 30px;\n`;\n\nfunction BreakLine(props) {\n    return (\n        <div\n            style={{\n                border: \"1px solid #aaa\",\n                borderRadius: 10,\n                paddingLeft: 10,\n                margin: 5,\n            }}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nfunction BlockQuoteBlock(props) {\n    return (\n        <div\n            style={{\n                border: \"1px dashed #aaa\",\n                borderRadius: 10,\n                paddingLeft: 10,\n                margin: 5,\n            }}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nfunction TableCellBlock(props) {\n    let style = {\n        textAlign: props.align ? props.align : \"center\",\n        padding: 5,\n    };\n\n    if (props.isHeader) {\n        style.border = \"1px solid #ccc\";\n        style.borderLeft = 0;\n        style.borderRight = 0;\n    } else {\n        style.borderButtom = \"1px solid #eee\";\n    }\n\n    return <td style={style}>{props.children}</td>;\n}\n\nexport default function DetailPage() {\n    const [Item, setItem] = useState(\"\");\n    const history = useHistory();\n    const { id } = useParams();\n    const db = useDb();\n    const storage = useStorage();\n\n    useEffect(() => {\n        db.getContent(id).then((doc) => setItem(doc));\n\n        storage.getMdFile(`${id}.txt`);\n    }, [id]);\n\n    return (\n        <React.Fragment>\n            {Item && (\n                <DetailContainer>\n                    <DetailTitleContainer>\n                        <DetailTitleContents>{Item.title}</DetailTitleContents>\n                    </DetailTitleContainer>\n                    <DetailContentsContainer>\n                        <DetailContentsTime>\n                            {moment(Item.timestamp).calendar()}\n                            {Item.updated &&\n                                `\\u00A0\\u00A0\\u00A0/\\u00A0\\u00A0\\u00A0(수정됨)\\u00A0\n                                ${moment(Item.updated).calendar()}`}\n                        </DetailContentsTime>\n                        <ReactMarkdown\n                            source={storage.Markdown}\n                            renderers={{\n                                blockquote: BlockQuoteBlock,\n                                thematicBreak: BreakLine,\n                                tableCell: TableCellBlock,\n                            }}\n                        />\n                    </DetailContentsContainer>\n                </DetailContainer>\n            )}\n\n            <GoListButton\n                onClick={() => {\n                    history.push(\"/\");\n                }}\n            >\n                <div>목록으로</div>\n            </GoListButton>\n        </React.Fragment>\n    );\n}\n","import ReactDOM from \"react-dom\";\n\nexport default function ModalPortal({ children }) {\n    const el = document.getElementById(\"modal\");\n\n    return ReactDOM.createPortal(children, el);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ModalContainer = styled.div`\n    display: flex;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n    display: flex;\n    background: white;\n    border-radius: 20px;\n    width: 500px;\n    height: 200px;\n    align-items: center;\n    justify-content: center;\n`;\n\nfunction RenderModal({ content }) {\n    return (\n        <React.Fragment>\n            <ModalContainer>\n                <ModalContent className=\"modal-class\">{content}</ModalContent>\n            </ModalContainer>\n        </React.Fragment>\n    );\n}\n\nexport default function Modal({ isVisible, message }) {\n    return (\n        <React.Fragment>\n            {isVisible && <RenderModal content={message} />}\n        </React.Fragment>\n    );\n}\n","import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { firebase_auth } from \"../cloud/firebase_init\";\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n    return useContext(authContext);\n};\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n\n    // Wrap any Firebase methods we want to use making sure ...\n    // ... to save the user to state.\n    const signin = (email, password) => {\n        return firebase_auth\n            .signInWithEmailAndPassword(email, password)\n            .then((response) => {\n                setUser(response.user);\n\n                return response.user;\n            });\n    };\n\n    const signup = (email, password) => {\n        return firebase_auth\n            .createUserWithEmailAndPassword(email, password)\n            .then((response) => {\n                setUser(response.user);\n                return response.user;\n            });\n    };\n\n    const signout = () => {\n        return firebase_auth.signOut().then(() => {\n            setUser(false);\n        });\n    };\n\n    const sendPasswordResetEmail = (email) => {\n        return firebase_auth.sendPasswordResetEmail(email).then(() => {\n            return true;\n        });\n    };\n\n    const confirmPasswordReset = (code, password) => {\n        return firebase_auth.confirmPasswordReset(code, password).then(() => {\n            return true;\n        });\n    };\n\n    useEffect(() => {\n        const unsubscribe = firebase_auth.onAuthStateChanged((user) => {\n            if (user) {\n                setUser(user);\n            } else {\n                setUser(false);\n            }\n        });\n\n        // Cleanup subscription on unmount\n        return () => unsubscribe();\n    }, []);\n\n    // Return the user object and auth methods\n    return {\n        user,\n        signin,\n        signup,\n        signout,\n        sendPasswordResetEmail,\n        confirmPasswordReset,\n    };\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport ModalPortal from \"../Modal/ModalPortal\";\nimport Modal from \"../Modal/Modal\";\nimport { useHistory } from \"react-router-dom\";\nimport useDb from \"../../hooks/useDb\";\nimport useStorage from \"../../hooks/useStorage\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst SpinnerAnimation = keyframes`\n0%,\n  100% {\n    box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n  }\n  12.5% {\n    box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n  }\n  25% {\n    box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n  }\n  37.5% {\n    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n  }\n  50% {\n    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n  }\n  62.5% {\n    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n  }\n  75% {\n    box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n  }\n  87.5% {\n    box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n\n`;\n\nconst SpinLoader = styled.div`\n    color: #badc58;\n    font-size: 15px;\n    margin: 100px auto;\n    width: 1em;\n    height: 1em;\n    border-radius: 50%;\n    position: relative;\n    text-indent: -9999em;\n    animation: ${SpinnerAnimation} 1.3s infinite linear;\n    transform: translateZ(0);\n    transform: translateZ(0);\n    transform: translateZ(0);\n`;\n\nconst AdminPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    width: 50%;\n    margin-top: 50px;\n`;\n\nconst WriteButton = styled.div`\n    display: flex;\n    margin: 0 10px;\n    height: 50px;\n    background: #74b9ff;\n    box-shadow: 5px 5px 10px 0px rgba(50, 50, 50, 0.4);\n    border-radius: 15px;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n`;\n\nconst EditButton = styled(WriteButton)`\n    background: #78e08f;\n`;\n\nconst DeleteButton = styled(WriteButton)`\n    background: #ff7675;\n`;\n\nconst ListContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    margin: 100px;\n`;\n\nconst ListContent = styled.div`\n    position: relative;\n    display: flex;\n    background: ${(props) => (props.tabColor ? \"#dfe6e9\" : \"#b2bec3\")};\n\n    box-shadow: 5px 5px 3px 0px rgba(50, 50, 50, 0.2);\n    height: 50px;\n    margin: 7px;\n    align-items: center;\n    cursor: pointer;\n`;\n\nconst CheckBox = styled.div`\n    border: 2px solid black;\n    margin: 0 20px;\n    width: 15px;\n    height: 15px;\n\n    background: ${(props) => (props.isCheck ? \"black\" : \"white\")};\n`;\n\nconst MoveToDetail = styled.div`\n    position: absolute;\n    font-size: 2rem;\n    right: 30px;\n\n    &:hover {\n        transition: 0.3s;\n        color: #e74c3c;\n    }\n`;\n\nlet SelectList = [];\n\nconst LoadingSpinner = () => {\n    return (\n        <AdminPageContainer style={{ width: \"100vw\", height: \"90vh\" }}>\n            <SpinLoader></SpinLoader>\n        </AdminPageContainer>\n    );\n};\n\nconst LoadAndNotLoginRender = ({ history }) => {\n    const [Timer, setTimer] = useState(false);\n\n    useEffect(() => {\n        const LoginWaitUnSubscribe = setTimeout(() => setTimer(true), 5000);\n        const RedirectWaitUnSubscribe = setTimeout(\n            () => history.push(\"/login\"),\n            7000\n        );\n\n        return () => {\n            clearTimeout(LoginWaitUnSubscribe);\n            clearTimeout(RedirectWaitUnSubscribe);\n        };\n    }, []);\n\n    if (Timer) {\n        return <div>관리자 페이지는 로그인이 필요합니다!</div>;\n    } else {\n        return <LoadingSpinner />;\n    }\n};\n\nconst RenderLists = ({ id, item, history, tabColor }) => {\n    const [isCheck, setIsCheck] = useState(false);\n\n    function onClickEvent(prev, id) {\n        setIsCheck((prev) => {\n            return !prev;\n        });\n\n        if (prev === false) {\n            SelectList.push(id);\n        } else {\n            const find_index = SelectList.indexOf(id);\n            SelectList.splice(find_index, 1);\n        }\n    }\n\n    return (\n        <ListContent\n            tabColor={tabColor}\n            onClick={() => {\n                onClickEvent(isCheck, id);\n            }}\n        >\n            <CheckBox isCheck={isCheck} />\n            {item}\n            <MoveToDetail\n                onClick={() => {\n                    history.push(`/detail/${id}`);\n                }}\n            >\n                →\n            </MoveToDetail>\n        </ListContent>\n    );\n};\n\n// TODO : 아무것도 체크안했을 때 모달창 만들기 => Done\n// 글 삭제는 여러개 선택가능 하고, 글 수정은 하나만 선택해야함. (여러개 선택 시 modal 띄워서 재선택하게) => Done\n// 체크유무에 따라 reference 처리 어떻게 할지 생각해보기. => 해야함. 선택한 reference들 가져오기 => reference랑 상관있나?? 그냥 isCheck true 인것들 id값 list에 저장해두고, false이면 pop 시키면 될듯?? => Done\n// TODO : 날짜순으로 정렬되게 하기. 메인List랑 같은 기능. => Done (useDb에서 list 불러오는 곳에서 정렬해서 불러옴.)\n// TODO : admin 페이지 권한 있는 사람만 접근할 수 있도록 해야함. 먼저 로그인 페이지 먼저 만들기. 그리고 auth 설정 불러와서 권한부여해보기.\n\nexport default function AdminPage() {\n    const db = useDb();\n    const auth = useAuth();\n    const storage = useStorage();\n    const [isVisible, setIsVisible] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [DataList, setDataList] = useState(null);\n\n    const history = useHistory();\n\n    const fetchData = async () => {\n        const data = await db.getContentList();\n        setDataList(data);\n    };\n\n    useEffect(() => {\n        SelectList = [];\n        setTimeout(() => {\n            fetchData();\n        }, 1000);\n    }, []);\n\n    async function checkModalRender(list, type = \"edit\") {\n        if (list.length === 0) {\n            setMessage(\"선택한 항목이 없습니다. 선택해주세요!\");\n            setIsVisible((prev) => !prev); // modal창 보여주는 부분\n        } else if (list.length >= 2 && type === \"edit\") {\n            setMessage(\"수정하실 1개 게시물만 선택해주세요!\");\n            setIsVisible((prev) => !prev);\n        } else {\n            // 조건에 문제가 없을 때 처리 => TODO : 삭제 되었을 때, 리스트를 다시 불러와야함. => Done\n            // 리스트 불러오는거 처리 어떻게 해야함. => Done\n            if (type === \"delete\") {\n                // 삭제버튼 누르는 경우 처리사항.\n                await db.deleteContent(list);\n                await storage.deleteMdfile(list);\n\n                setTimeout(() => {\n                    fetchData();\n                }, 1000);\n            } else {\n                // 수정버튼 누르는 경우 처리사항.\n                history.push(`/edit/${list[0]}`);\n            }\n        }\n    }\n\n    if (auth.user) {\n        return (\n            <AdminPageContainer\n                onClick={(event) => {\n                    if (\n                        isVisible &&\n                        !event.target.classList.contains(\"modal-class\")\n                    ) {\n                        setIsVisible((prev) => !prev);\n                    }\n                }}\n            >\n                <ButtonContainer>\n                    <WriteButton\n                        onClick={() => {\n                            history.push(\"/write\");\n                        }}\n                    >\n                        <span>글 쓰기</span>\n                    </WriteButton>\n                    <EditButton\n                        onClick={(event) => {\n                            checkModalRender(SelectList);\n                            event.preventDefault();\n                        }}\n                    >\n                        <span>글 수정</span>\n                    </EditButton>\n                    <DeleteButton\n                        onClick={(event) => {\n                            checkModalRender(SelectList, \"delete\");\n                        }}\n                    >\n                        <span>글 삭제</span>\n                    </DeleteButton>\n                </ButtonContainer>\n\n                <ListContainer>\n                    {DataList &&\n                        DataList.map((item) => {\n                            return (\n                                <RenderLists\n                                    key={item.id}\n                                    id={item.id}\n                                    item={item.data().title}\n                                    history={history}\n                                    tabColor={DataList.indexOf(item) % 2}\n                                />\n                            );\n                        })}\n                </ListContainer>\n                <ModalPortal>\n                    <Modal isVisible={isVisible} message={message} />\n                </ModalPortal>\n            </AdminPageContainer>\n        );\n    } else {\n        return <LoadAndNotLoginRender history={history} />;\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst LoginPageContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: 90vh;\n\n    justify-content: center;\n    align-items: center;\n`;\n\nconst LoginContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 800px;\n    height: 800px;\n\n    justify-content: center;\n    align-items: center;\n`;\n\nconst InputContainer = styled.div`\n    display: flex;\n\n    align-items: center;\n    border: 1px solid black;\n    box-sizing: border-box;\n    width: 300px;\n    height: 50px;\n    margin: 15px 0;\n    z-index: 100;\n`;\n\nconst LoginInput = styled.input`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    background: none;\n    outline-width: 0;\n    font-size: 1.2rem;\n    border: none;\n    z-index: 1;\n`;\n\nconst LoginButton = styled.div`\n    display: flex;\n    width: 200px;\n    height: 50px;\n    margin-top: 40px;\n    justify-content: center;\n    align-items: center;\n    border-radius: 30px;\n    background: #74b9ff;\n    cursor: pointer;\n`;\n\nexport default function AdminLogin() {\n    const auth = useAuth();\n    const history = useHistory();\n\n    const [Email, setEmail] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        if (auth.user) {\n            history.push(\"/admin\");\n        }\n    }, [auth.user]);\n\n    return (\n        <LoginPageContainer>\n            <LoginContainer>\n                관리자 페이지\n                <InputContainer>\n                    <FontAwesomeIcon\n                        icon={faEnvelope}\n                        size=\"lg\"\n                        style={{ padding: \"0 10px\", opacity: 0.5 }}\n                    />\n                    <LoginInput\n                        value={Email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    ></LoginInput>\n                </InputContainer>\n                <InputContainer>\n                    <FontAwesomeIcon\n                        icon={faKey}\n                        size=\"lg\"\n                        style={{ padding: \"0 10px\", opacity: 0.5 }}\n                    />\n                    <LoginInput\n                        value={Password}\n                        type=\"password\"\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                </InputContainer>\n                <LoginButton\n                    onClick={() => {\n                        auth.signin(Email, Password)\n                        .catch((error) =>\n                            alert(\"입력한 정보가 틀렸습니다. 다시 입력해주세요\")\n                        );\n                    }}\n                >\n                    로그인\n                </LoginButton>\n            </LoginContainer>\n        </LoginPageContainer>\n    );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./components/ListPage/Main\";\nimport Header from \"./components/Header\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport EditPage from \"./components/EditPage/Edit\";\nimport DetailPage from \"./components/DetailPage/Detail\";\nimport AdminPage from \"./components/AdminPage/Admin\";\nimport AdminLogin from \"./components/AdminPage/AdminLogin\";\nimport { ProvideAuth } from \"./hooks/useAuth\";\n\nconst PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <PageContainer>\n                        <Header />\n                        <MainPage />\n                        <GlobalStyle />\n                    </PageContainer>\n                </Route>\n                <Route exact path=\"/detail/:id\">\n                    <PageContainer>\n                        <Header />\n                        <DetailPage />\n                        <GlobalStyle />\n                    </PageContainer>\n                </Route>\n                <Route exact path=\"/write/\">\n                    <PageContainer>\n                        <EditPage />\n                        <GlobalStyle />\n                    </PageContainer>\n                </Route>\n                <Route exact path=\"/edit/:id\">\n                    <PageContainer>\n                        <EditPage />\n                        <GlobalStyle />\n                    </PageContainer>\n                </Route>\n                <Route exact path=\"/login/\">\n                    <PageContainer>\n                        <ProvideAuth>\n                            <AdminLogin />\n                            <GlobalStyle />\n                        </ProvideAuth>\n                    </PageContainer>\n                </Route>\n                <Route exact path=\"/admin/\">\n                    <ProvideAuth>\n                        <AdminPage />\n                        <GlobalStyle />\n                    </ProvideAuth>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","const firebaseConfig = {\n    apiKey: \"AIzaSyDKZdcl-sIRtxiSlkaEDKbua4yNGDjPkWA\",\n    authDomain: \"express-ef393.firebaseapp.com\",\n    databaseURL: \"https://express-ef393.firebaseio.com\",\n    projectId: \"express-ef393\",\n    storageBucket: \"express-ef393.appspot.com\",\n    messagingSenderId: \"537830711213\",\n    appId: \"1:537830711213:web:d0009b9846fa206eda4b24\",\n    measurementId: \"G-CPV4427PTB\",\n};\n\nmodule.exports = { firebaseConfig };\n"],"sourceRoot":""}